version: '3.8'

services:
  bot:
    build:
      context: ./bot
      dockerfile: ../docker/bot.Dockerfile
    volumes:
      - ./bot:/usr/src/app
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/dsd_db
    depends_on:
      - api
      - db
    networks:
      - dsd_network

  api:
    build:
      context: ./api
      dockerfile: ../docker/api.Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./api:/usr/src/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/dsd_db
    depends_on:
      - db
    networks:
      - dsd_network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - POSTGRES_DB=dsd_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dsd_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@dsd.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - dsd_network

volumes:
  postgres_data:

networks:
  dsd_network:
    driver: bridge